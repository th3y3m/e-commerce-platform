-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cart_items
(
    cart_id text COLLATE pg_catalog."default" NOT NULL,
    product_id text COLLATE pg_catalog."default" NOT NULL,
    quantity bigint,
    unit_price numeric,
    CONSTRAINT cart_items_pkey PRIMARY KEY (cart_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id text COLLATE pg_catalog."default" NOT NULL,
    category_name text COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public.couriers
(
    courier_id text COLLATE pg_catalog."default" NOT NULL,
    courier text COLLATE pg_catalog."default",
    status boolean,
    CONSTRAINT couriers_pkey PRIMARY KEY (courier_id)
);

CREATE TABLE IF NOT EXISTS public.discounts
(
    discount_id text COLLATE pg_catalog."default" NOT NULL,
    discount_type text COLLATE pg_catalog."default",
    discount_value numeric,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    CONSTRAINT discounts_pkey PRIMARY KEY (discount_id)
);

CREATE TABLE IF NOT EXISTS public.freight_rates
(
    rate_id text COLLATE pg_catalog."default" NOT NULL,
    courier_id text COLLATE pg_catalog."default",
    distance_min_km bigint,
    distance_max_km bigint,
    cost_per_km numeric,
    status boolean,
    CONSTRAINT freight_rates_pkey PRIMARY KEY (rate_id)
);

CREATE TABLE IF NOT EXISTS public.news
(
    news_id text COLLATE pg_catalog."default" NOT NULL,
    title text COLLATE pg_catalog."default",
    content text COLLATE pg_catalog."default",
    published_date timestamp with time zone,
    author_id text COLLATE pg_catalog."default",
    status text COLLATE pg_catalog."default",
    image_url text COLLATE pg_catalog."default",
    category text COLLATE pg_catalog."default",
    CONSTRAINT news_pkey PRIMARY KEY (news_id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    order_id text COLLATE pg_catalog."default" NOT NULL,
    product_id text COLLATE pg_catalog."default" NOT NULL,
    quantity bigint,
    unit_price numeric,
    CONSTRAINT order_details_pkey PRIMARY KEY (order_id, product_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id text COLLATE pg_catalog."default" NOT NULL,
    customer_id text COLLATE pg_catalog."default",
    order_date timestamp with time zone,
    total_amount numeric,
    order_status text COLLATE pg_catalog."default",
    shipping_address text COLLATE pg_catalog."default",
    courier_id text COLLATE pg_catalog."default",
    freight_price numeric,
    estimated_delivery_date timestamp with time zone,
    actual_delivery_date timestamp with time zone,
    payment_method text COLLATE pg_catalog."default",
    payment_status text COLLATE pg_catalog."default",
    voucher_id text COLLATE pg_catalog."default",
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.product_discounts
(
    product_id text COLLATE pg_catalog."default" NOT NULL,
    discount_id text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT product_discounts_pkey PRIMARY KEY (product_id, discount_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id text COLLATE pg_catalog."default" NOT NULL,
    seller_id text COLLATE pg_catalog."default",
    product_name text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    price numeric,
    quantity bigint,
    category_id text COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    status boolean,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    review_id text COLLATE pg_catalog."default" NOT NULL,
    product_id text COLLATE pg_catalog."default",
    user_id text COLLATE pg_catalog."default",
    rating bigint,
    comment text COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    status boolean,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.shopping_carts
(
    cart_id text COLLATE pg_catalog."default" NOT NULL,
    user_id text COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    status boolean,
    CONSTRAINT shopping_carts_pkey PRIMARY KEY (cart_id)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    transaction_id text COLLATE pg_catalog."default" NOT NULL,
    order_id text COLLATE pg_catalog."default",
    payment_amount numeric,
    transaction_date timestamp with time zone,
    payment_method text COLLATE pg_catalog."default",
    payment_status text COLLATE pg_catalog."default",
    CONSTRAINT transactions_pkey PRIMARY KEY (transaction_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id text COLLATE pg_catalog."default" NOT NULL,
    username text COLLATE pg_catalog."default" NOT NULL,
    password_hash text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    full_name text COLLATE pg_catalog."default",
    phone_number text COLLATE pg_catalog."default",
    address text COLLATE pg_catalog."default",
    user_type text COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    status boolean,
    token text COLLATE pg_catalog."default",
    token_expires timestamp with time zone,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT uni_users_email UNIQUE (email),
    CONSTRAINT uni_users_username UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.vouchers
(
    voucher_id text COLLATE pg_catalog."default" NOT NULL,
    voucher_code text COLLATE pg_catalog."default" NOT NULL,
    discount_type text COLLATE pg_catalog."default",
    discount_value numeric,
    minimum_order_amount numeric,
    max_discount_amount numeric,
    start_date timestamp with time zone,
    end_date timestamp with time zone,
    usage_limit bigint,
    usage_count bigint,
    status boolean,
    CONSTRAINT vouchers_pkey PRIMARY KEY (voucher_id),
    CONSTRAINT uni_vouchers_voucher_code UNIQUE (voucher_code)
);

ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT fk_products_cart_items FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cart_items
    ADD CONSTRAINT fk_shopping_carts_cart_items FOREIGN KEY (cart_id)
    REFERENCES public.shopping_carts (cart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.freight_rates
    ADD CONSTRAINT fk_couriers_freight_rates FOREIGN KEY (courier_id)
    REFERENCES public.couriers (courier_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.news
    ADD CONSTRAINT fk_users_news FOREIGN KEY (author_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_orders_order_details FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT fk_products_order_details FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_couriers_orders FOREIGN KEY (courier_id)
    REFERENCES public.couriers (courier_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_users_orders FOREIGN KEY (customer_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT fk_vouchers_orders FOREIGN KEY (voucher_id)
    REFERENCES public.vouchers (voucher_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_discounts
    ADD CONSTRAINT fk_discounts_product_discounts FOREIGN KEY (discount_id)
    REFERENCES public.discounts (discount_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_discounts
    ADD CONSTRAINT fk_products_product_discounts FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_categories_products FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT fk_users_products FOREIGN KEY (seller_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT fk_products_reviews FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT fk_users_reviews FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.shopping_carts
    ADD CONSTRAINT fk_users_shopping_carts FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT fk_orders_transactions FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;